
package com.xdev.rcdemo.guipersistence.ui;

import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;

import com.vaadin.server.FontAwesome;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.xdev.dal.DAOs;
import com.xdev.rcdemo.guipersistence.dal.OrderDAO;
import com.xdev.rcdemo.guipersistence.dal.RegionDAO;
import com.xdev.rcdemo.guipersistence.entities.Employee;
import com.xdev.rcdemo.guipersistence.entities.Order;
import com.xdev.rcdemo.guipersistence.entities.Order_;
import com.xdev.rcdemo.guipersistence.entities.Region;
import com.xdev.rcdemo.guipersistence.entities.Territory;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevCheckBox;
import com.xdev.ui.XdevColorPicker;
import com.xdev.ui.XdevFormLayout;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevHorizontalLayout;
import com.xdev.ui.XdevHorizontalSplitPanel;
import com.xdev.ui.XdevPanel;
import com.xdev.ui.XdevPopupDateField;
import com.xdev.ui.XdevSlider;
import com.xdev.ui.XdevTabSheet;
import com.xdev.ui.XdevTextField;
import com.xdev.ui.XdevTree;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.combobox.XdevComboBox;
import com.xdev.ui.entitycomponent.table.XdevTable;
import com.xdev.ui.hierarchical.TreeDataProvider;
import com.xdev.ui.persistence.GuiPersistence;

public class MainView extends XdevView {

	private final static String PREFERENCES_KEY = "gui-persistence-data";
	private final Preferences preferences;

	/**
	 *
	 */
	public MainView() {
		super();

		this.initUI();
		this.comboBox.addItems("VISA","Mastercard","DC","PayPal");

		this.preferences = Preferences.userNodeForPackage(MainView.class);
		this.cmdLoad.setEnabled(this.preferences.get(PREFERENCES_KEY, null) != null);
	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdSave}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdSave_buttonClick(final Button.ClickEvent event) {

		this.preferences.put(PREFERENCES_KEY, GuiPersistence.save(this, "demo"));
		try {
			this.preferences.flush();
		} catch (final BackingStoreException e) {
			e.printStackTrace();
		}
		this.cmdLoad.setEnabled(true);
	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdLoad}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdLoad_buttonClick(final Button.ClickEvent event) {

		GuiPersistence.load(this, "demo", this.preferences.get(PREFERENCES_KEY, null));
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.horizontalLayout = new XdevHorizontalLayout();
		this.cmdSave = new XdevButton();
		this.cmdLoad = new XdevButton();
		this.tabSheet = new XdevTabSheet();
		this.table = new XdevTable<>();
		this.horizontalSplitPanel = new XdevHorizontalSplitPanel();
		this.panel = new XdevPanel();
		this.tree = new XdevTree();
		this.formLayout = new XdevFormLayout();
		this.textField = new XdevTextField();
		this.popupDateField = new XdevPopupDateField();
		this.comboBox = new XdevComboBox<>();
		this.slider = new XdevSlider();
		this.colorPicker = new XdevColorPicker();
		this.checkBox = new XdevCheckBox();

		this.horizontalLayout.setMargin(new MarginInfo(false));
		this.cmdSave.setIcon(FontAwesome.SAVE);
		this.cmdSave.setCaption("Save");
		this.cmdLoad.setIcon(FontAwesome.FOLDER_OPEN_O);
		this.cmdLoad.setCaption("Load");
		this.cmdLoad.setEnabled(false);
		this.tabSheet.setStyleName("framed");
		this.table.setColumnReorderingAllowed(true);
		this.table.setColumnCollapsingAllowed(true);
		this.table.setId("table");
		this.table.setContainerDataSource(Order.class, DAOs.get(OrderDAO.class).findAll());
		this.table.setVisibleColumns(Order_.orderid.getName(), Order_.customer.getName(), Order_.employee.getName(),
				Order_.shipper.getName(), Order_.orderdate.getName(), Order_.requireddate.getName(),
				Order_.shippeddate.getName(), Order_.freight.getName(), Order_.shipname.getName(),
				Order_.shipaddress.getName(), Order_.shipcity.getName(), Order_.shipregion.getName(),
				Order_.shippostalcode.getName(), Order_.shipcountry.getName());
		this.horizontalSplitPanel.setId("horizontalSplitPanel");
		this.horizontalSplitPanel.setSplitPosition(50.0F, Unit.PERCENTAGE);
		this.tree.setId("tree");
		this.tree.setContainerDataSource(
				TreeDataProvider.New(DAOs.get(RegionDAO.class).findAll()).addLevel(Region::getTerritories)
						.addLevel(Territory::getEmployees).addLevel(Employee::getOrders).addLevel(Order::getOrderdetails),
				false);
		this.textField.setColumns(0);
		this.textField.setCaption("TextField");
		this.textField.setPersistValue(true);
		this.textField.setId("textField");
		this.popupDateField.setCaption("PopupDateField");
		this.popupDateField.setPersistValue(true);
		this.popupDateField.setId("popupDateField");
		this.comboBox.setCaption("ComboBox");
		this.comboBox.setPersistValue(true);
		this.comboBox.setId("comboBox");
		this.slider.setCaption("Slider");
		this.slider.setPersistValue(true);
		this.slider.setId("slider");
		this.colorPicker.setCaption("ColorPicker");
		this.colorPicker.setPersistValue(true);
		this.colorPicker.setId("colorPicker");
		this.checkBox.setCaption("CheckBox");
		this.checkBox.setPersistValue(true);
		this.checkBox.setId("checkBox");

		this.cmdSave.setSizeUndefined();
		this.horizontalLayout.addComponent(this.cmdSave);
		this.horizontalLayout.setComponentAlignment(this.cmdSave, Alignment.MIDDLE_CENTER);
		this.cmdLoad.setSizeUndefined();
		this.horizontalLayout.addComponent(this.cmdLoad);
		this.horizontalLayout.setComponentAlignment(this.cmdLoad, Alignment.MIDDLE_CENTER);
		final CustomComponent horizontalLayout_spacer = new CustomComponent();
		horizontalLayout_spacer.setSizeFull();
		this.horizontalLayout.addComponent(horizontalLayout_spacer);
		this.horizontalLayout.setExpandRatio(horizontalLayout_spacer, 1.0F);
		this.tree.setSizeUndefined();
		this.panel.setContent(this.tree);
		this.textField.setSizeUndefined();
		this.formLayout.addComponent(this.textField);
		this.popupDateField.setSizeUndefined();
		this.formLayout.addComponent(this.popupDateField);
		this.comboBox.setSizeUndefined();
		this.formLayout.addComponent(this.comboBox);
		this.slider.setSizeUndefined();
		this.formLayout.addComponent(this.slider);
		this.colorPicker.setSizeUndefined();
		this.formLayout.addComponent(this.colorPicker);
		this.checkBox.setSizeUndefined();
		this.formLayout.addComponent(this.checkBox);
		this.panel.setSizeFull();
		this.horizontalSplitPanel.setFirstComponent(this.panel);
		this.formLayout.setSizeFull();
		this.horizontalSplitPanel.setSecondComponent(this.formLayout);
		this.table.setSizeFull();
		this.tabSheet.addTab(this.table, "Tab", null);
		this.horizontalSplitPanel.setSizeFull();
		this.tabSheet.addTab(this.horizontalSplitPanel, "Tab", null);
		this.tabSheet.setSelectedTab(this.table);
		this.gridLayout.setColumns(1);
		this.gridLayout.setRows(2);
		this.horizontalLayout.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayout.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.horizontalLayout, 0, 0);
		this.tabSheet.setSizeFull();
		this.gridLayout.addComponent(this.tabSheet, 0, 1);
		this.gridLayout.setColumnExpandRatio(0, 10.0F);
		this.gridLayout.setRowExpandRatio(1, 100.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();

		this.cmdSave.addClickListener(event -> this.cmdSave_buttonClick(event));
		this.cmdLoad.addClickListener(event -> this.cmdLoad_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevColorPicker colorPicker;
	private XdevButton cmdSave, cmdLoad;
	private XdevTabSheet tabSheet;
	private XdevPanel panel;
	private XdevGridLayout gridLayout;
	private XdevHorizontalSplitPanel horizontalSplitPanel;
	private XdevTable<Order> table;
	private XdevHorizontalLayout horizontalLayout;
	private XdevPopupDateField popupDateField;
	private XdevSlider slider;
	private XdevFormLayout formLayout;
	private XdevComboBox<?> comboBox;
	private XdevCheckBox checkBox;
	private XdevTree tree;
	private XdevTextField textField;
	// </generated-code>

}
